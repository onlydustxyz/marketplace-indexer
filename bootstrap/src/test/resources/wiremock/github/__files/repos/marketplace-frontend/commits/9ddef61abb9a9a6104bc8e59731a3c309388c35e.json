{
    "sha": "9ddef61abb9a9a6104bc8e59731a3c309388c35e",
    "node_id": "C_kwDOHbl-LNoAKDlkZGVmNjFhYmI5YTlhNjEwNGJjOGU1OTczMWEzYzMwOTM4OGMzNWU",
    "commit": {
        "author": {
            "name": "Anthony Buisset",
            "email": "abuisset@gmail.com",
            "date": "2023-09-21T20:56:13Z"
        },
        "committer": {
            "name": "Anthony Buisset",
            "email": "abuisset@gmail.com",
            "date": "2023-09-21T20:56:13Z"
        },
        "message": "make unique message an infrastructure detail",
        "tree": {
            "sha": "e90ff607685680bf78188e6f22c66982179376c6",
            "url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/git/trees/e90ff607685680bf78188e6f22c66982179376c6"
        },
        "url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/git/commits/9ddef61abb9a9a6104bc8e59731a3c309388c35e",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
        }
    },
    "url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/commits/9ddef61abb9a9a6104bc8e59731a3c309388c35e",
    "html_url": "https://github.com/onlydustxyz/marketplace-frontend/commit/9ddef61abb9a9a6104bc8e59731a3c309388c35e",
    "comments_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/commits/9ddef61abb9a9a6104bc8e59731a3c309388c35e/comments",
    "author": {
        "login": "AnthonyBuisset",
        "id": 43467246,
        "node_id": "MDQ6VXNlcjQzNDY3MjQ2",
        "avatar_url": "https://avatars.githubusercontent.com/u/43467246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AnthonyBuisset",
        "html_url": "https://github.com/AnthonyBuisset",
        "followers_url": "https://api.github.com/users/AnthonyBuisset/followers",
        "following_url": "https://api.github.com/users/AnthonyBuisset/following{/other_user}",
        "gists_url": "https://api.github.com/users/AnthonyBuisset/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AnthonyBuisset/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AnthonyBuisset/subscriptions",
        "organizations_url": "https://api.github.com/users/AnthonyBuisset/orgs",
        "repos_url": "https://api.github.com/users/AnthonyBuisset/repos",
        "events_url": "https://api.github.com/users/AnthonyBuisset/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AnthonyBuisset/received_events",
        "type": "User",
        "site_admin": false
    },
    "committer": {
        "login": "AnthonyBuisset",
        "id": 43467246,
        "node_id": "MDQ6VXNlcjQzNDY3MjQ2",
        "avatar_url": "https://avatars.githubusercontent.com/u/43467246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AnthonyBuisset",
        "html_url": "https://github.com/AnthonyBuisset",
        "followers_url": "https://api.github.com/users/AnthonyBuisset/followers",
        "following_url": "https://api.github.com/users/AnthonyBuisset/following{/other_user}",
        "gists_url": "https://api.github.com/users/AnthonyBuisset/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AnthonyBuisset/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AnthonyBuisset/subscriptions",
        "organizations_url": "https://api.github.com/users/AnthonyBuisset/orgs",
        "repos_url": "https://api.github.com/users/AnthonyBuisset/repos",
        "events_url": "https://api.github.com/users/AnthonyBuisset/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AnthonyBuisset/received_events",
        "type": "User",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "043d570d55b1b705a4d03a006ef77da82159f142",
            "url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/commits/043d570d55b1b705a4d03a006ef77da82159f142",
            "html_url": "https://github.com/onlydustxyz/marketplace-frontend/commit/043d570d55b1b705a4d03a006ef77da82159f142"
        }
    ],
    "stats": {
        "total": 172,
        "additions": 78,
        "deletions": 94
    },
    "files": [
        {
            "sha": "520e798aaf09ca05d4d8ae5650094a5390e80c16",
            "filename": "backend/api/src/application/budget/allocate.rs",
            "status": "modified",
            "additions": 2,
            "deletions": 3,
            "changes": 5,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fbudget%2Fallocate.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fbudget%2Fallocate.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fapplication%2Fbudget%2Fallocate.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -6,14 +6,14 @@ use domain::{\n \tsponsor, AggregateRepository, Amount, Budget, BudgetId, DomainError, Event, Project, ProjectId,\n \tPublisher,\n };\n-use infrastructure::{amqp::UniqueMessage, database::Repository};\n+use infrastructure::database::Repository;\n use tracing::instrument;\n \n use crate::{domain::Publishable, models::Sponsor};\n \n #[derive(Constructor)]\n pub struct Usecase {\n-\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_publisher: Arc<dyn Publisher<Event>>,\n \tproject_repository: AggregateRepository<Project>,\n \tbudget_repository: AggregateRepository<Budget>,\n \tsponsor_repository: Arc<dyn Repository<Sponsor>>,\n@@ -65,7 +65,6 @@ impl Usecase {\n \t\tproject\n \t\t\t.map(Event::from)\n \t\t\t.chain(budget.map(Event::from))\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;"
        },
        {
            "sha": "b9c6fcd5f4248cbc51249794466c35f891be6b61",
            "filename": "backend/api/src/application/payment/invoice.rs",
            "status": "modified",
            "additions": 1,
            "deletions": 4,
            "changes": 5,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fpayment%2Finvoice.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fpayment%2Finvoice.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fapplication%2Fpayment%2Finvoice.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -3,14 +3,13 @@ use std::sync::Arc;\n use anyhow::Result;\n use derive_more::Constructor;\n use domain::{AggregateRepository, DomainError, Event, Payment, PaymentId, Publisher};\n-use infrastructure::amqp::UniqueMessage;\n use tracing::instrument;\n \n use crate::domain::Publishable;\n \n #[derive(Constructor)]\n pub struct Usecase {\n-\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_publisher: Arc<dyn Publisher<Event>>,\n \tpayment_repository: AggregateRepository<Payment>,\n }\n \n@@ -34,7 +33,6 @@ impl Usecase {\n \t\tevents\n \t\t\t.into_iter()\n \t\t\t.map(Event::from)\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;\n@@ -58,7 +56,6 @@ impl Usecase {\n \t\tevents\n \t\t\t.into_iter()\n \t\t\t.map(Event::from)\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;"
        },
        {
            "sha": "873919c43676ecf908ba8b1ec23a4b8b6e7b899e",
            "filename": "backend/api/src/application/payment/process.rs",
            "status": "modified",
            "additions": 1,
            "deletions": 3,
            "changes": 4,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fpayment%2Fprocess.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fpayment%2Fprocess.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fapplication%2Fpayment%2Fprocess.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -6,15 +6,14 @@ use domain::{\n \tAggregateRepository, Amount, DomainError, Event, Payment, PaymentId, PaymentReceipt,\n \tPaymentReceiptId, Publisher,\n };\n-use infrastructure::amqp::UniqueMessage;\n use olog::IntoField;\n use tracing::instrument;\n \n use crate::{application::dusty_bot, domain::Publishable};\n \n #[derive(Constructor)]\n pub struct Usecase {\n-\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_publisher: Arc<dyn Publisher<Event>>,\n \tpayment_repository: AggregateRepository<Payment>,\n \tclose_issues_usecase: dusty_bot::close_issues::Usecase,\n }\n@@ -36,7 +35,6 @@ impl Usecase {\n \t\t\t.add_receipt(new_receipt_id, amount, receipt)\n \t\t\t.map_err(|e| DomainError::InvalidInputs(e.into()))?\n \t\t\t.map(Event::from)\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;"
        },
        {
            "sha": "514dd796d8c0234e2e7b6f7e0862b070c31abb19",
            "filename": "backend/api/src/application/project/accept_leader_invitation.rs",
            "status": "modified",
            "additions": 3,
            "deletions": 4,
            "changes": 7,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Faccept_leader_invitation.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Faccept_leader_invitation.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Faccept_leader_invitation.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -2,20 +2,20 @@ use std::sync::Arc;\n \n use anyhow::{anyhow, Result};\n use domain::{AggregateRepository, DomainError, Event, GithubUserId, Project, Publisher, UserId};\n-use infrastructure::{amqp::UniqueMessage, database::ImmutableRepository};\n+use infrastructure::database::ImmutableRepository;\n use tracing::instrument;\n \n use crate::{domain::Publishable, models::*};\n \n pub struct Usecase {\n-\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_publisher: Arc<dyn Publisher<Event>>,\n \tinvitations_repository: Arc<dyn ImmutableRepository<PendingProjectLeaderInvitation>>,\n \tproject_repository: AggregateRepository<Project>,\n }\n \n impl Usecase {\n \tpub fn new(\n-\t\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\t\tevent_publisher: Arc<dyn Publisher<Event>>,\n \t\tinvitations_repository: Arc<dyn ImmutableRepository<PendingProjectLeaderInvitation>>,\n \t\tproject_repository: AggregateRepository<Project>,\n \t) -> Self {\n@@ -46,7 +46,6 @@ impl Usecase {\n \t\t\t.assign_leader(user_id)\n \t\t\t.map_err(|e| DomainError::InvalidInputs(e.into()))?\n \t\t\t.map(Event::from)\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;"
        },
        {
            "sha": "34fd92335840aceb2e561c3775bcc823386a74e2",
            "filename": "backend/api/src/application/project/apply.rs",
            "status": "modified",
            "additions": 1,
            "deletions": 3,
            "changes": 4,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Fapply.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Fapply.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Fapply.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -6,7 +6,6 @@ use domain::{\n \tAggregateRepository, Application, ApplicationId, DomainError, Event, Project, ProjectId,\n \tPublisher, UserId,\n };\n-use infrastructure::amqp::UniqueMessage;\n use tracing::instrument;\n use uuid::Uuid;\n \n@@ -15,7 +14,7 @@ use crate::domain::Publishable;\n #[derive(Constructor)]\n pub struct Usecase {\n \tproject_repository: AggregateRepository<Project>,\n-\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_publisher: Arc<dyn Publisher<Event>>,\n }\n \n impl Usecase {\n@@ -33,7 +32,6 @@ impl Usecase {\n \t\t\t.map_err(|e| DomainError::InternalError(e.into()))?\n \t\t\t.map(Event::from)\n \t\t\t.chain(Application::create(application_id, project_id, applicant_id).map(Event::from))\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;"
        },
        {
            "sha": "a3edde66316ba8f9135a1023303f8cf8e2c44221",
            "filename": "backend/api/src/application/project/create.rs",
            "status": "modified",
            "additions": 2,
            "deletions": 3,
            "changes": 5,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Fcreate.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Fcreate.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Fcreate.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -5,7 +5,7 @@ use derive_more::Constructor;\n use domain::{\n \tsponsor, Amount, BudgetId, DomainError, Event, Project, ProjectId, ProjectVisibility, Publisher,\n };\n-use infrastructure::{amqp::UniqueMessage, database::Repository};\n+use infrastructure::database::Repository;\n use reqwest::Url;\n use tracing::instrument;\n \n@@ -18,7 +18,7 @@ use crate::{\n \n #[derive(Constructor)]\n pub struct Usecase {\n-\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_publisher: Arc<dyn Publisher<Event>>,\n \tproject_details_repository: Arc<dyn Repository<ProjectDetails>>,\n \timage_store: Arc<dyn ImageStoreService>,\n \tbudget_allocation_usecase: application::budget::allocate::Usecase,\n@@ -77,7 +77,6 @@ impl Usecase {\n \t\tproject\n \t\t\t.map(Event::from)\n \t\t\t.chain(budget.unwrap_or_default().map(Event::from))\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;"
        },
        {
            "sha": "b0ec3ca4e4679ec12ea841f775ccc4d54eb173e5",
            "filename": "backend/api/src/application/project/link_github_repo.rs",
            "status": "modified",
            "additions": 2,
            "deletions": 4,
            "changes": 6,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Flink_github_repo.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Flink_github_repo.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Flink_github_repo.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -4,20 +4,19 @@ use anyhow::{anyhow, Result};\n use domain::{\n \tAggregateRepository, DomainError, Event, GithubRepoId, Project, ProjectId, Publisher,\n };\n-use infrastructure::amqp::UniqueMessage;\n use tracing::instrument;\n \n use crate::domain::{GithubRepoExists, Publishable};\n \n pub struct Usecase {\n-\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_publisher: Arc<dyn Publisher<Event>>,\n \tproject_repository: AggregateRepository<Project>,\n \tgithub_repo_exists: Arc<dyn GithubRepoExists>,\n }\n \n impl Usecase {\n \tpub fn new(\n-\t\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\t\tevent_publisher: Arc<dyn Publisher<Event>>,\n \t\tproject_repository: AggregateRepository<Project>,\n \t\tgithub_repo_exists: Arc<dyn GithubRepoExists>,\n \t) -> Self {\n@@ -52,7 +51,6 @@ impl Usecase {\n \t\t\t.link_github_repo(github_repo_id)\n \t\t\t.map_err(|e| DomainError::InvalidInputs(e.into()))?\n \t\t\t.map(Event::from)\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;"
        },
        {
            "sha": "f024a31bc60f40be2d01db57c0d94dadc31904f6",
            "filename": "backend/api/src/application/project/remove_leader.rs",
            "status": "modified",
            "additions": 2,
            "deletions": 4,
            "changes": 6,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Fremove_leader.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Fremove_leader.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Fremove_leader.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -1,19 +1,18 @@\n use std::sync::Arc;\n \n use domain::{AggregateRepository, DomainError, Event, Project, ProjectId, Publisher, UserId};\n-use infrastructure::amqp::UniqueMessage;\n use tracing::instrument;\n \n use crate::domain::Publishable;\n \n pub struct Usecase {\n-\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_publisher: Arc<dyn Publisher<Event>>,\n \tproject_repository: AggregateRepository<Project>,\n }\n \n impl Usecase {\n \tpub fn new(\n-\t\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\t\tevent_publisher: Arc<dyn Publisher<Event>>,\n \t\tproject_repository: AggregateRepository<Project>,\n \t) -> Self {\n \t\tSelf {\n@@ -34,7 +33,6 @@ impl Usecase {\n \t\t\t.unassign_leader(*user_id)\n \t\t\t.map_err(|e| DomainError::InvalidInputs(e.into()))?\n \t\t\t.map(Event::from)\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;"
        },
        {
            "sha": "5fe6da454ef529ab22a0306d23e4bc22c8062fc8",
            "filename": "backend/api/src/application/project/unlink_github_repo.rs",
            "status": "modified",
            "additions": 2,
            "deletions": 4,
            "changes": 6,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Funlink_github_repo.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Funlink_github_repo.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fapplication%2Fproject%2Funlink_github_repo.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -4,19 +4,18 @@ use anyhow::Result;\n use domain::{\n \tAggregateRepository, DomainError, Event, GithubRepoId, Project, ProjectId, Publisher,\n };\n-use infrastructure::amqp::UniqueMessage;\n use tracing::instrument;\n \n use crate::domain::Publishable;\n \n pub struct Usecase {\n-\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_publisher: Arc<dyn Publisher<Event>>,\n \tproject_repository: AggregateRepository<Project>,\n }\n \n impl Usecase {\n \tpub fn new(\n-\t\tevent_publisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\t\tevent_publisher: Arc<dyn Publisher<Event>>,\n \t\tproject_repository: AggregateRepository<Project>,\n \t) -> Self {\n \t\tSelf {\n@@ -38,7 +37,6 @@ impl Usecase {\n \t\t\t.unlink_github_repo(github_repo_id)\n \t\t\t.map_err(|e| DomainError::InvalidInputs(e.into()))?\n \t\t\t.map(Event::from)\n-\t\t\t.map(UniqueMessage::new)\n \t\t\t.collect::<Vec<_>>()\n \t\t\t.publish(self.event_publisher.clone())\n \t\t\t.await?;"
        },
        {
            "sha": "18d5069199c57984144615947884217a2e36b770",
            "filename": "backend/api/src/presentation/graphql/context.rs",
            "status": "modified",
            "additions": 1,
            "deletions": 2,
            "changes": 3,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fpresentation%2Fgraphql%2Fcontext.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fpresentation%2Fgraphql%2Fcontext.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fpresentation%2Fgraphql%2Fcontext.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -2,7 +2,6 @@ use std::sync::Arc;\n \n use domain::{AggregateRepository, Event, GithubUserId, Payment, Project, Publisher, UserId};\n use infrastructure::{\n-\tamqp::UniqueMessage,\n \tdatabase::{ImmutableRepository, Repository},\n \tgithub,\n };\n@@ -54,7 +53,7 @@ impl Context {\n \t\tgithub_api_client: Arc<github::Client>,\n \t\tens: Arc<ens::Client>,\n \t\tsimple_storage: Arc<dyn ImageStoreService>,\n-\t\tbus: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\t\tbus: Arc<dyn Publisher<Event>>,\n \t) -> Self {\n \t\tSelf {\n \t\t\tcaller_permissions,"
        },
        {
            "sha": "51e35d44e2b84117e912190658fd248d527960ec",
            "filename": "backend/api/src/presentation/http/mod.rs",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fpresentation%2Fhttp%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fpresentation%2Fhttp%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fpresentation%2Fhttp%2Fmod.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -4,7 +4,7 @@ use ::domain::{AggregateRepository, Project};\n use domain::{Budget, Event, GithubFetchService, Payment, Publisher};\n pub use http::Config;\n use infrastructure::{\n-\tamqp::{CommandMessage, UniqueMessage},\n+\tamqp::CommandMessage,\n \tdatabase::{ImmutableRepository, Repository},\n \tgithub,\n };\n@@ -31,7 +31,7 @@ pub fn serve(\n \tconfig: crate::Config,\n \tschema: graphql::Schema,\n \tcommand_bus: Arc<dyn Publisher<CommandMessage<Event>>>,\n-\tevent_bus: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tevent_bus: Arc<dyn Publisher<Event>>,\n \tproject_repository: AggregateRepository<Project>,\n \tbudget_repository: AggregateRepository<Budget>,\n \tpayment_repository: AggregateRepository<Payment>,"
        },
        {
            "sha": "c72c1bd3ae1d4c93a45f4543627364f0969af8c4",
            "filename": "backend/api/src/presentation/http/routes/graphql.rs",
            "status": "modified",
            "additions": 2,
            "deletions": 3,
            "changes": 5,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fpresentation%2Fhttp%2Froutes%2Fgraphql.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fapi%2Fsrc%2Fpresentation%2Fhttp%2Froutes%2Fgraphql.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fpresentation%2Fhttp%2Froutes%2Fgraphql.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -2,7 +2,6 @@ use std::sync::Arc;\n \n use domain::{AggregateRepository, Event, Payment, Project, Publisher};\n use infrastructure::{\n-\tamqp::UniqueMessage,\n \tdatabase::{ImmutableRepository, Repository},\n \tgithub,\n };\n@@ -43,7 +42,7 @@ pub async fn get_graphql_handler(\n \tonboarding_repository: &State<Arc<dyn Repository<Onboarding>>>,\n \tcontact_informations_repository: &State<Arc<dyn ContactInformationsRepository>>,\n \tgithub_api_client: &State<Arc<github::Client>>,\n-\tbus: &State<Arc<dyn Publisher<UniqueMessage<Event>>>>,\n+\tbus: &State<Arc<dyn Publisher<Event>>>,\n \tens: &State<Arc<ens::Client>>,\n \tsimple_storage: &State<Arc<dyn ImageStoreService>>,\n ) -> GraphQLResponse {\n@@ -86,7 +85,7 @@ pub async fn post_graphql_handler(\n \tonboarding_repository: &State<Arc<dyn Repository<Onboarding>>>,\n \tcontact_informations_repository: &State<Arc<dyn ContactInformationsRepository>>,\n \tgithub_api_client: &State<Arc<github::Client>>,\n-\tbus: &State<Arc<dyn Publisher<UniqueMessage<Event>>>>,\n+\tbus: &State<Arc<dyn Publisher<Event>>>,\n \tens: &State<Arc<ens::Client>>,\n \tsimple_storage: &State<Arc<dyn ImageStoreService>>,\n ) -> GraphQLResponse {"
        },
        {
            "sha": "c40afac53242cf472321ed953f9c76a5859e49d6",
            "filename": "backend/common/domain/src/event/mod.rs",
            "status": "modified",
            "additions": 1,
            "deletions": 3,
            "changes": 4,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Fevent%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Fevent%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Fdomain%2Fsrc%2Fevent%2Fmod.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -2,7 +2,7 @@ use std::fmt::Display;\n \n use serde::{Deserialize, Serialize};\n \n-use crate::{ApplicationEvent, BudgetEvent, MessagePayload, PaymentEvent, ProjectEvent};\n+use crate::{ApplicationEvent, BudgetEvent, PaymentEvent, ProjectEvent};\n \n mod listener;\n pub use listener::Listener;\n@@ -25,8 +25,6 @@ impl Display for Event {\n \t}\n }\n \n-impl MessagePayload for Event {}\n-\n #[cfg(test)]\n mod test {\n \tuse assert_json_diff::assert_json_include;"
        },
        {
            "sha": "eec60fe7c0977635f71968a0db21d22d6b6c2bbc",
            "filename": "backend/common/domain/src/lib.rs",
            "status": "modified",
            "additions": 1,
            "deletions": 2,
            "changes": 3,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Flib.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Flib.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Fdomain%2Fsrc%2Flib.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -21,8 +21,7 @@ pub use error::*;\n \n mod messaging;\n pub use messaging::{\n-\tMessage, Payload as MessagePayload, Publisher, PublisherError, Subscriber,\n-\tSubscriberCallbackError, SubscriberError,\n+\tMessage, Publisher, PublisherError, Subscriber, SubscriberCallbackError, SubscriberError,\n };\n \n mod project;"
        },
        {
            "sha": "e1b06e56113bd7aabf18b414bd69ca82dae6e996",
            "filename": "backend/common/domain/src/messaging/message.rs",
            "status": "removed",
            "additions": 0,
            "deletions": 10,
            "changes": 10,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/043d570d55b1b705a4d03a006ef77da82159f142/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fmessage.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/043d570d55b1b705a4d03a006ef77da82159f142/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fmessage.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fmessage.rs?ref=043d570d55b1b705a4d03a006ef77da82159f142",
            "patch": "@@ -1,10 +0,0 @@\n-use std::fmt::Debug;\n-\n-use olog::opentelemetry::propagation::Extractor;\n-use serde::{de::DeserializeOwned, Serialize};\n-use serde_json::Value;\n-\n-pub trait Message: Extractor + Serialize + DeserializeOwned + Debug + Clone {}\n-pub trait Payload: Serialize + DeserializeOwned + Debug + Clone {}\n-\n-impl Payload for Value {}"
        },
        {
            "sha": "0a8f09f8c5e37e9bc322e1536e942c69ee043b55",
            "filename": "backend/common/domain/src/messaging/mod.rs",
            "status": "modified",
            "additions": 1,
            "deletions": 4,
            "changes": 5,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fmod.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -1,9 +1,6 @@\n-mod message;\n-pub use message::{Message, Payload};\n-\n mod publisher;\n pub use publisher::{\n-\tcomposite::Publisher as CompositePublisher, Error as PublisherError, Publisher,\n+\tcomposite::Publisher as CompositePublisher, Error as PublisherError, Message, Publisher,\n };\n \n mod subscriber;"
        },
        {
            "sha": "f9eb28aa5421104d516b44d48da96c631e19900b",
            "filename": "backend/common/domain/src/messaging/publisher/message.rs",
            "status": "added",
            "additions": 7,
            "deletions": 0,
            "changes": 7,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fpublisher%2Fmessage.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fpublisher%2Fmessage.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fpublisher%2Fmessage.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -0,0 +1,7 @@\n+use std::fmt::Debug;\n+\n+use serde::{de::DeserializeOwned, Serialize};\n+\n+pub trait Message: Serialize + DeserializeOwned + Debug + Clone {}\n+\n+impl<T: Serialize + DeserializeOwned + Debug + Clone> Message for T {}"
        },
        {
            "sha": "6d50ad06f944f252e25b9a03d8dba77b2153e8fb",
            "filename": "backend/common/domain/src/messaging/publisher/mod.rs",
            "status": "modified",
            "additions": 4,
            "deletions": 3,
            "changes": 7,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fpublisher%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fpublisher%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Fdomain%2Fsrc%2Fmessaging%2Fpublisher%2Fmod.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -1,11 +1,13 @@\n+use std::fmt::Debug;\n+\n use async_trait::async_trait;\n+pub use message::Message;\n #[cfg(test)]\n use mockall::automock;\n use thiserror::Error;\n \n-use super::Message;\n-\n pub mod composite;\n+mod message;\n \n #[derive(Debug, Error)]\n pub enum Error {\n@@ -63,7 +65,6 @@ mod tests {\n \t\t\tVec::default()\n \t\t}\n \t}\n-\timpl Message for TestMessage {}\n \n \t#[rstest]\n \tasync fn publish_many_messages() {"
        },
        {
            "sha": "cc53b01d17179dba3bb9dfcd173a01c83c1ee951",
            "filename": "backend/common/infrastructure/src/amqp/bus/mod.rs",
            "status": "modified",
            "additions": 7,
            "deletions": 4,
            "changes": 11,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fbus%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fbus%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fbus%2Fmod.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -1,5 +1,6 @@\n use std::sync::{Arc, Weak};\n \n+use domain::Message;\n use lapin::{\n \tmessage::Delivery,\n \toptions::{BasicCancelOptions, ExchangeDeclareOptions, QueueDeclareOptions},\n@@ -12,7 +13,7 @@ use tokio::sync::{Mutex, RwLock};\n use tokio_retry::{strategy::FixedInterval, Retry};\n use tokio_stream::StreamExt;\n \n-use super::Config;\n+use super::{Config, UniqueMessage};\n \n mod destination;\n mod publisher;\n@@ -25,6 +26,8 @@ const DELIVERY_MODE_PERSISTENT: u8 = 2;\n pub enum Error {\n \t#[error(transparent)]\n \tAmqp(#[from] lapin::Error),\n+\t#[error(transparent)]\n+\tSerde(#[from] serde_json::Error),\n }\n \n pub struct Bus {\n@@ -71,19 +74,19 @@ impl Bus {\n \t\tConsumableBus::new(self, queue_name).await\n \t}\n \n-\tpub async fn publish(\n+\tpub async fn publish<M: Message>(\n \t\t&self,\n \t\texchange_name: &str,\n \t\trouting_key: &str,\n-\t\tdata: &[u8],\n+\t\tmessage: UniqueMessage<M>,\n \t) -> Result<Confirmation, Error> {\n \t\tlet confirmation = self\n \t\t\t.channel\n \t\t\t.basic_publish(\n \t\t\t\texchange_name,\n \t\t\t\trouting_key,\n \t\t\t\tDefault::default(),\n-\t\t\t\tdata,\n+\t\t\t\t&serde_json::to_vec(&message)?,\n \t\t\t\tBasicProperties::default().with_delivery_mode(DELIVERY_MODE_PERSISTENT),\n \t\t\t)\n \t\t\t.await?"
        },
        {
            "sha": "4ba431d3c22bc25b87f8ae1c16702b30612b8553",
            "filename": "backend/common/infrastructure/src/amqp/bus/publisher.rs",
            "status": "modified",
            "additions": 2,
            "deletions": 1,
            "changes": 3,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fbus%2Fpublisher.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fbus%2Fpublisher.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fbus%2Fpublisher.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -3,6 +3,7 @@ use async_trait::async_trait;\n use domain::{Message, Publisher, PublisherError};\n \n use super::{Destination, PublisherBus};\n+use crate::amqp::unique_message::Unique;\n \n #[async_trait]\n impl<M: Message + Send + Sync> Publisher<M> for PublisherBus {\n@@ -14,7 +15,7 @@ impl<M: Message + Send + Sync> Publisher<M> for PublisherBus {\n \n \t\tlet confirmation = self\n \t\t\t.bus\n-\t\t\t.publish(&exchange_name, &routing_key, &serde_json::to_vec(message)?)\n+\t\t\t.publish(&exchange_name, &routing_key, message.clone().unique())\n \t\t\t.await\n \t\t\t.map_err(|e| PublisherError::Send(anyhow!(e)))?;\n "
        },
        {
            "sha": "c3c2237939e696c0442e93e5f145d5d48539fa0f",
            "filename": "backend/common/infrastructure/src/amqp/bus/subscriber.rs",
            "status": "modified",
            "additions": 6,
            "deletions": 3,
            "changes": 9,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fbus%2Fsubscriber.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fbus%2Fsubscriber.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fbus%2Fsubscriber.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -5,15 +5,18 @@ use async_trait::async_trait;\n use domain::{Message, Subscriber, SubscriberCallbackError, SubscriberError};\n use lapin::{message::Delivery, options::BasicNackOptions};\n use olog::{error, IntoField};\n-use opentelemetry::{propagation::TextMapPropagator, sdk::propagation::TraceContextPropagator};\n+use opentelemetry::{\n+\tpropagation::{Extractor, TextMapPropagator},\n+\tsdk::propagation::TraceContextPropagator,\n+};\n use serde_json::Error;\n use tracing::{instrument, Span};\n use tracing_opentelemetry::OpenTelemetrySpanExt;\n \n use super::ConsumableBus;\n \n #[async_trait]\n-impl<M: Message + Send + Sync> Subscriber<M> for ConsumableBus {\n+impl<M: Message + Extractor + Send + Sync> Subscriber<M> for ConsumableBus {\n \tasync fn subscribe<C, F>(&self, callback: C) -> Result<(), SubscriberError>\n \twhere\n \t\tC: Fn(M) -> F + Send + Sync,\n@@ -53,7 +56,7 @@ impl ConsumableBus {\n \t\tdelivery: Delivery,\n \t) -> Result<(), SubscriberError>\n \twhere\n-\t\tM: Message + Send + Sync,\n+\t\tM: Message + Send + Sync + Extractor,\n \t\tC: Fn(M) -> F + Send + Sync,\n \t\tF: Future<Output = Result<(), SubscriberCallbackError>> + Send,\n \t{"
        },
        {
            "sha": "796cbee0a6a46122a093f7222816c46ad339774c",
            "filename": "backend/common/infrastructure/src/amqp/command/message.rs",
            "status": "modified",
            "additions": 2,
            "deletions": 4,
            "changes": 6,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fcommand%2Fmessage.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fcommand%2Fmessage.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fcommand%2Fmessage.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -1,6 +1,6 @@\n use std::fmt::Debug;\n \n-use domain::{CommandId, Message, MessagePayload};\n+use domain::{CommandId, Message};\n use olog::opentelemetry::propagation::Extractor;\n use serde::{Deserialize, Serialize};\n \n@@ -19,9 +19,7 @@ impl<P> Extractor for Decorator<P> {\n \t}\n }\n \n-impl<P: MessagePayload> Message for Decorator<P> {}\n-\n-impl<P: MessagePayload> Decorator<P> {\n+impl<P: Message> Decorator<P> {\n \tpub fn new(command_id: CommandId, payload: P) -> Self {\n \t\tSelf(UniqueMessage::new(payload).with_command(command_id))\n \t}"
        },
        {
            "sha": "f13486f68fd167aec3229a0a530711df8bd31fe7",
            "filename": "backend/common/infrastructure/src/amqp/mod.rs",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Fmod.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -5,7 +5,7 @@ mod config;\n pub use config::Config;\n \n mod unique_message;\n-pub use unique_message::UniqueMessage;\n+pub use unique_message::{Unique, UniqueMessage};\n \n mod command;\n pub use command::{"
        },
        {
            "sha": "e4742014db618f722490bce11cd3b0aa9000df6b",
            "filename": "backend/common/infrastructure/src/amqp/unique_message.rs",
            "status": "modified",
            "additions": 14,
            "deletions": 3,
            "changes": 17,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Funique_message.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Funique_message.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Finfrastructure%2Fsrc%2Famqp%2Funique_message.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -5,7 +5,7 @@ use std::{\n \n use chrono::{NaiveDateTime, Utc};\n use derive_getters::Getters;\n-use domain::{CommandId, Message, MessagePayload};\n+use domain::CommandId;\n use olog::{\n \topentelemetry::{\n \t\tpropagation::{Extractor, TextMapPropagator},\n@@ -38,8 +38,6 @@ impl<P> Extractor for UniqueMessage<P> {\n \t}\n }\n \n-impl<P: MessagePayload> Message for UniqueMessage<P> {}\n-\n impl<P> UniqueMessage<P> {\n \tpub fn new(payload: P) -> Self {\n \t\tlet mut trace_context = HashMap::new();\n@@ -81,3 +79,16 @@ impl<P: Serialize> Display for UniqueMessage<P> {\n \t\tOk(())\n \t}\n }\n+\n+pub trait Unique\n+where\n+\tSelf: Sized,\n+{\n+\tfn unique(self) -> UniqueMessage<Self>;\n+}\n+\n+impl<P> Unique for P {\n+\tfn unique(self) -> UniqueMessage<Self> {\n+\t\tUniqueMessage::new(self)\n+\t}\n+}"
        },
        {
            "sha": "f2ccf19559c9c004f8b4c1c436425f26d84fa3eb",
            "filename": "backend/common/infrastructure/tests/amqp_subscriber_it.rs",
            "status": "modified",
            "additions": 5,
            "deletions": 8,
            "changes": 13,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Ftests%2Famqp_subscriber_it.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Finfrastructure%2Ftests%2Famqp_subscriber_it.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Finfrastructure%2Ftests%2Famqp_subscriber_it.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -6,8 +6,8 @@ use std::sync::{\n };\n \n use anyhow::anyhow;\n-use domain::{Message, Subscriber, SubscriberCallbackError, SubscriberError};\n-use infrastructure::amqp::{Bus, ConsumableBus};\n+use domain::{Subscriber, SubscriberCallbackError, SubscriberError};\n+use infrastructure::amqp::{Bus, ConsumableBus, Unique};\n use lapin::options::QueueDeclareOptions;\n use mockall::lazy_static;\n use opentelemetry::propagation::Extractor;\n@@ -33,7 +33,6 @@ impl Extractor for TestMessage {\n \t\tVec::default()\n \t}\n }\n-impl Message for TestMessage {}\n \n async fn init(bus: Bus, queue_name: &'static str) -> ConsumableBus {\n \tbus.with_queue(\n@@ -50,16 +49,14 @@ async fn init(bus: Bus, queue_name: &'static str) -> ConsumableBus {\n }\n \n async fn publish_message(bus: &Bus, queue_name: &'static str, message: TestMessage) {\n-\tlet confirmation = bus\n-\t\t.publish(\"\", queue_name, &serde_json::to_vec(&message).unwrap())\n-\t\t.await\n-\t\t.unwrap();\n+\tlet confirmation = bus.publish(\"\", queue_name, message.unique()).await.unwrap();\n \n \tassert!(!confirmation.is_nack());\n }\n \n async fn publish_badly_formatted_message(bus: &Bus, queue_name: &'static str) {\n-\tlet confirmation = bus.publish(\"\", queue_name, \"bad-message\".as_bytes()).await.unwrap();\n+\tlet confirmation =\n+\t\tbus.publish(\"\", queue_name, String::from(\"bad-message\").unique()).await.unwrap();\n \n \tassert!(!confirmation.is_nack());\n }"
        },
        {
            "sha": "95de996683243a7d11f501f7670da2a5678d1dd6",
            "filename": "backend/common/testing/src/context/amqp.rs",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Ftesting%2Fsrc%2Fcontext%2Famqp.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fcommon%2Ftesting%2Fsrc%2Fcontext%2Famqp.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fcommon%2Ftesting%2Fsrc%2Fcontext%2Famqp.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -2,7 +2,7 @@ use std::{collections::HashMap, sync::Arc};\n \n use anyhow::{anyhow, Result};\n use domain::{Event, Publisher, Subscriber, SubscriberCallbackError};\n-use infrastructure::amqp::{self, Bus, BusError, ConsumableBus, Destination, UniqueMessage};\n+use infrastructure::amqp::{self, Bus, BusError, ConsumableBus, Destination};\n use lapin::options::QueueDeclareOptions;\n use serde_json::Value;\n use testcontainers::{\n@@ -15,7 +15,7 @@ pub struct Context<'docker> {\n \tpub config: amqp::Config,\n \tpub listeners: HashMap<String, UnboundedReceiver<Value>>,\n \tkill_channels: Vec<UnboundedSender<()>>,\n-\tpublisher: Arc<dyn Publisher<UniqueMessage<Event>>>,\n+\tpublisher: Arc<dyn Publisher<Event>>,\n \t_container: Container<'docker, GenericImage>,\n }\n \n@@ -94,7 +94,7 @@ impl<'docker> Context<'docker> {\n \t}\n \n \tpub async fn publish<E: Into<Event>>(&self, event: E) -> Result<()> {\n-\t\tself.publisher.publish(&UniqueMessage::new(event.into())).await?;\n+\t\tself.publisher.publish(&event.into()).await?;\n \t\tOk(())\n \t}\n }"
        },
        {
            "sha": "54760fddeb7b849f19283bb4b7e0940845a09ec8",
            "filename": "backend/event-listeners/src/listeners/mod.rs",
            "status": "modified",
            "additions": 3,
            "deletions": 6,
            "changes": 9,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fevent-listeners%2Fsrc%2Flisteners%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/9ddef61abb9a9a6104bc8e59731a3c309388c35e/backend%2Fevent-listeners%2Fsrc%2Flisteners%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fevent-listeners%2Fsrc%2Flisteners%2Fmod.rs?ref=9ddef61abb9a9a6104bc8e59731a3c309388c35e",
            "patch": "@@ -6,9 +6,7 @@ pub mod webhook;\n use std::sync::Arc;\n \n use anyhow::Result;\n-use domain::{\n-\tcurrencies, EventListener, LogErr, MessagePayload, Subscriber, SubscriberCallbackError,\n-};\n+use domain::{currencies, EventListener, LogErr, Message, Subscriber, SubscriberCallbackError};\n use infrastructure::{\n \tamqp::{CommandSubscriberDecorator, UniqueMessage},\n \tcoinmarketcap, database, event_bus,\n@@ -82,13 +80,12 @@ pub async fn spawn_all(\n \tOk(handles)\n }\n \n-pub trait Spawnable<E: MessagePayload + Send + Sync, S: Subscriber<UniqueMessage<E>> + Send + Sync>\n-{\n+pub trait Spawnable<E: Message + Send + Sync, S: Subscriber<UniqueMessage<E>> + Send + Sync> {\n \tfn spawn(self, bus: S) -> JoinHandle<()>;\n }\n \n impl<\n-\tE: MessagePayload + Send + Sync,\n+\tE: Message + Send + Sync,\n \tS: Subscriber<UniqueMessage<E>> + Send + Sync + 'static,\n \tEL: EventListener<E> + 'static,\n > Spawnable<E, S> for EL"
        }
    ]
}