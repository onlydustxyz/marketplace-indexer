{
    "sha": "37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
    "node_id": "C_kwDOHbl-LNoAKDM3ZDA4Yzk3YTZhYzAwMDJlY2M2NTU1ZDFhMzMyODc4MWQ5M2Q5ZjM",
    "commit": {
        "author": {
            "name": "Anthony Buisset",
            "email": "abuisset@gmail.com",
            "date": "2023-09-22T10:53:24Z"
        },
        "committer": {
            "name": "Anthony Buisset",
            "email": "abuisset@gmail.com",
            "date": "2023-09-22T10:54:06Z"
        },
        "message": "move some models from event listeners to api",
        "tree": {
            "sha": "3b73249caa6ff9f086d0b438bdc6de04b56e8e57",
            "url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/git/trees/3b73249caa6ff9f086d0b438bdc6de04b56e8e57"
        },
        "url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/git/commits/37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
        }
    },
    "url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/commits/37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
    "html_url": "https://github.com/onlydustxyz/marketplace-frontend/commit/37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
    "comments_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/commits/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/comments",
    "author": {
        "login": "AnthonyBuisset",
        "id": 43467246,
        "node_id": "MDQ6VXNlcjQzNDY3MjQ2",
        "avatar_url": "https://avatars.githubusercontent.com/u/43467246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AnthonyBuisset",
        "html_url": "https://github.com/AnthonyBuisset",
        "followers_url": "https://api.github.com/users/AnthonyBuisset/followers",
        "following_url": "https://api.github.com/users/AnthonyBuisset/following{/other_user}",
        "gists_url": "https://api.github.com/users/AnthonyBuisset/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AnthonyBuisset/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AnthonyBuisset/subscriptions",
        "organizations_url": "https://api.github.com/users/AnthonyBuisset/orgs",
        "repos_url": "https://api.github.com/users/AnthonyBuisset/repos",
        "events_url": "https://api.github.com/users/AnthonyBuisset/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AnthonyBuisset/received_events",
        "type": "User",
        "site_admin": false
    },
    "committer": {
        "login": "AnthonyBuisset",
        "id": 43467246,
        "node_id": "MDQ6VXNlcjQzNDY3MjQ2",
        "avatar_url": "https://avatars.githubusercontent.com/u/43467246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AnthonyBuisset",
        "html_url": "https://github.com/AnthonyBuisset",
        "followers_url": "https://api.github.com/users/AnthonyBuisset/followers",
        "following_url": "https://api.github.com/users/AnthonyBuisset/following{/other_user}",
        "gists_url": "https://api.github.com/users/AnthonyBuisset/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AnthonyBuisset/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AnthonyBuisset/subscriptions",
        "organizations_url": "https://api.github.com/users/AnthonyBuisset/orgs",
        "repos_url": "https://api.github.com/users/AnthonyBuisset/repos",
        "events_url": "https://api.github.com/users/AnthonyBuisset/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AnthonyBuisset/received_events",
        "type": "User",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "a3fd088ec8724852ae5395178a86a243d9f8f3ca",
            "url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/commits/a3fd088ec8724852ae5395178a86a243d9f8f3ca",
            "html_url": "https://github.com/onlydustxyz/marketplace-frontend/commit/a3fd088ec8724852ae5395178a86a243d9f8f3ca"
        }
    ],
    "stats": {
        "total": 1008,
        "additions": 965,
        "deletions": 43
    },
    "files": [
        {
            "sha": "ae727c04da78fabf2b0e48008eda0f42cd48010a",
            "filename": "backend/api/src/models/applications.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fapplications.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fapplications.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fapplications.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/applications.rs"
        },
        {
            "sha": "f5c6c88f01d9261f55d2c0bda89728565afe03f0",
            "filename": "backend/api/src/models/budgets.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fbudgets.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fbudgets.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fbudgets.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/budgets.rs"
        },
        {
            "sha": "ec505fcbe3aeb8df69e37d1a27538bf6f32c8ee3",
            "filename": "backend/api/src/models/crypto_usd_quotes copy.rs",
            "status": "added",
            "additions": 33,
            "deletions": 0,
            "changes": 33,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fcrypto_usd_quotes%20copy.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fcrypto_usd_quotes%20copy.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fcrypto_usd_quotes%20copy.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,33 @@\n+use chrono::{NaiveDateTime, Utc};\n+use diesel::{Identifiable, Queryable};\n+use infrastructure::database::{enums::Currency, schema::crypto_usd_quotes};\n+use rust_decimal::Decimal;\n+use serde::{Deserialize, Serialize};\n+\n+#[derive(\n+\tDebug, Clone, Insertable, Identifiable, Serialize, Deserialize, AsChangeset, Queryable, Model,\n+)]\n+#[diesel(primary_key(currency))]\n+pub struct CryptoUsdQuote {\n+\tpub currency: Currency,\n+\tpub price: Decimal,\n+\tpub updated_at: NaiveDateTime,\n+}\n+\n+impl CryptoUsdQuote {\n+\tpub fn new(currency: Currency, price: Decimal) -> Self {\n+\t\tSelf {\n+\t\t\tcurrency,\n+\t\t\tprice,\n+\t\t\tupdated_at: Utc::now().naive_utc(),\n+\t\t}\n+\t}\n+}\n+\n+impl Identifiable for CryptoUsdQuote {\n+\ttype Id = Currency;\n+\n+\tfn id(self) -> Self::Id {\n+\t\tself.currency\n+\t}\n+}"
        },
        {
            "sha": "7cad3b01faafb9e0f804df8df259f8c7bbcb965f",
            "filename": "backend/api/src/models/github_issues/mod.rs",
            "status": "added",
            "additions": 49,
            "deletions": 0,
            "changes": 49,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_issues%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_issues%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_issues%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,49 @@\n+use chrono::NaiveDateTime;\n+use diesel::Identifiable;\n+use diesel_json::Json;\n+use domain::{GithubIssueId, GithubIssueNumber, GithubRepoId, GithubUserId};\n+use infrastructure::database::{enums::GithubIssueStatus, schema::github_issues};\n+use serde::{Deserialize, Serialize};\n+\n+#[derive(\n+\tDebug, Clone, Insertable, AsChangeset, Identifiable, Queryable, Serialize, Deserialize, Model,\n+)]\n+pub struct GithubIssue {\n+\tpub id: GithubIssueId,\n+\tpub repo_id: GithubRepoId,\n+\tpub number: GithubIssueNumber,\n+\tpub created_at: NaiveDateTime,\n+\tpub author_id: GithubUserId,\n+\tpub status: GithubIssueStatus,\n+\tpub title: String,\n+\tpub html_url: String,\n+\tpub closed_at: Option<NaiveDateTime>,\n+\tpub assignee_ids: Json<Vec<GithubUserId>>,\n+\tpub comments_count: i64,\n+}\n+\n+impl Identifiable for GithubIssue {\n+\ttype Id = GithubIssueId;\n+\n+\tfn id(self) -> Self::Id {\n+\t\tself.id\n+\t}\n+}\n+\n+impl From<domain::GithubIssue> for GithubIssue {\n+\tfn from(issue: domain::GithubIssue) -> Self {\n+\t\tGithubIssue {\n+\t\t\tid: issue.id,\n+\t\t\trepo_id: issue.repo_id,\n+\t\t\tnumber: issue.number,\n+\t\t\tcreated_at: issue.created_at.naive_utc(),\n+\t\t\tauthor_id: issue.author.id,\n+\t\t\tstatus: issue.status.into(),\n+\t\t\ttitle: issue.title,\n+\t\t\thtml_url: issue.html_url.to_string(),\n+\t\t\tclosed_at: issue.closed_at.map(|date| date.naive_utc()),\n+\t\t\tassignee_ids: Json::new(issue.assignees.iter().map(|assignee| assignee.id).collect()),\n+\t\t\tcomments_count: issue.comments_count as i64,\n+\t\t}\n+\t}\n+}"
        },
        {
            "sha": "b43a885b954f0b026f07dbd1c23ec0980507490e",
            "filename": "backend/api/src/models/github_pull_request_indexes/mod.rs",
            "status": "added",
            "additions": 43,
            "deletions": 0,
            "changes": 43,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_request_indexes%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_request_indexes%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_request_indexes%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,43 @@\n+mod repository;\n+\n+use diesel::Identifiable;\n+use domain::GithubPullRequestId;\n+use infrastructure::database::schema::github_pull_request_indexes;\n+pub use repository::Repository;\n+use serde::{Deserialize, Serialize};\n+use serde_json::Value;\n+\n+#[derive(\n+\tDebug,\n+\tDefault,\n+\tClone,\n+\tInsertable,\n+\tAsChangeset,\n+\tIdentifiable,\n+\tQueryable,\n+\tSerialize,\n+\tDeserialize,\n+\tModel,\n+)]\n+#[diesel(table_name = github_pull_request_indexes, primary_key(pull_request_id))]\n+pub struct GithubPullRequestIndex {\n+\tpub pull_request_id: GithubPullRequestId,\n+\tpub pull_request_indexer_state: Option<Value>,\n+}\n+\n+impl GithubPullRequestIndex {\n+\tpub fn new(pull_request_id: GithubPullRequestId) -> Self {\n+\t\tSelf {\n+\t\t\tpull_request_id,\n+\t\t\t..Default::default()\n+\t\t}\n+\t}\n+}\n+\n+impl Identifiable for GithubPullRequestIndex {\n+\ttype Id = GithubPullRequestId;\n+\n+\tfn id(self) -> Self::Id {\n+\t\tself.pull_request_id\n+\t}\n+}"
        },
        {
            "sha": "e0ffbfad14de6f6d885e9de1f7c2d961140e1b22",
            "filename": "backend/api/src/models/github_pull_request_indexes/repository.rs",
            "status": "added",
            "additions": 59,
            "deletions": 0,
            "changes": 59,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_request_indexes%2Frepository.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_request_indexes%2Frepository.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_request_indexes%2Frepository.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,59 @@\n+use diesel::{ExpressionMethods, QueryDsl, RunQueryDsl};\n+use domain::GithubPullRequestId;\n+use infrastructure::{\n+\tcontextualized_error::IntoContextualizedError,\n+\tdatabase,\n+\tdatabase::{schema::github_pull_request_indexes::dsl, Result},\n+};\n+\n+use super::GithubPullRequestIndex;\n+\n+pub trait Repository: database::Repository<GithubPullRequestIndex> {\n+\tfn select_pull_request_indexer_state(\n+\t\t&self,\n+\t\tpull_request_id: &GithubPullRequestId,\n+\t) -> Result<Option<serde_json::Value>>;\n+\tfn upsert_pull_request_indexer_state(\n+\t\t&self,\n+\t\tpull_request_id: &GithubPullRequestId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()>;\n+}\n+\n+impl Repository for database::Client {\n+\tfn select_pull_request_indexer_state(\n+\t\t&self,\n+\t\tpull_request_id: &GithubPullRequestId,\n+\t) -> Result<Option<serde_json::Value>> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tlet state = dsl::github_pull_request_indexes\n+\t\t\t.select(dsl::pull_request_indexer_state)\n+\t\t\t.filter(dsl::pull_request_id.eq(pull_request_id))\n+\t\t\t.first(&mut *connection)\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"select pull_request_indexer_state from github_pull_request_indexes where id={pull_request_id}\"\n+\t\t\t))?;\n+\t\tOk(state)\n+\t}\n+\n+\tfn upsert_pull_request_indexer_state(\n+\t\t&self,\n+\t\tpull_request_id: &GithubPullRequestId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tdiesel::insert_into(dsl::github_pull_request_indexes)\n+\t\t\t.values((\n+\t\t\t\tdsl::pull_request_id.eq(pull_request_id),\n+\t\t\t\tdsl::pull_request_indexer_state.eq(&state),\n+\t\t\t))\n+\t\t\t.on_conflict(dsl::pull_request_id)\n+\t\t\t.do_update()\n+\t\t\t.set(dsl::pull_request_indexer_state.eq(&state))\n+\t\t\t.execute(&mut *connection)\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"update github_pull_request_indexes set github_pull_request_indexes where id={pull_request_id}\"\n+\t\t\t))?;\n+\t\tOk(())\n+\t}\n+}"
        },
        {
            "sha": "394cb4c77d690222e4e9a338d643fdd67455b7d6",
            "filename": "backend/api/src/models/github_pull_requests/closing_issues.rs",
            "status": "added",
            "additions": 29,
            "deletions": 0,
            "changes": 29,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fclosing_issues.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fclosing_issues.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fclosing_issues.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,29 @@\n+use diesel::Identifiable;\n+use domain::{GithubIssueId, GithubPullRequestId};\n+use infrastructure::database::schema::closing_issues;\n+use serde::{Deserialize, Serialize};\n+\n+#[derive(\n+\tDebug,\n+\tClone,\n+\tInsertable,\n+\tIdentifiable,\n+\tQueryable,\n+\tSerialize,\n+\tDeserialize,\n+\tImmutableModel,\n+\tPartialEq,\n+)]\n+#[diesel(primary_key(github_issue_id, github_pull_request_id))]\n+pub struct ClosingIssue {\n+\tpub github_issue_id: GithubIssueId,\n+\tpub github_pull_request_id: GithubPullRequestId,\n+}\n+\n+impl Identifiable for ClosingIssue {\n+\ttype Id = (GithubIssueId, GithubPullRequestId);\n+\n+\tfn id(self) -> Self::Id {\n+\t\t(self.github_issue_id, self.github_pull_request_id)\n+\t}\n+}"
        },
        {
            "sha": "93d47229d3fd71d2222cbf15298ac7a5ba2e59d0",
            "filename": "backend/api/src/models/github_pull_requests/commit.rs",
            "status": "added",
            "additions": 23,
            "deletions": 0,
            "changes": 23,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fcommit.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fcommit.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fcommit.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,23 @@\n+use diesel::Identifiable;\n+use domain::{GithubPullRequestId, GithubUserId};\n+use infrastructure::database::schema::github_pull_request_commits;\n+use serde::{Deserialize, Serialize};\n+\n+#[derive(\n+\tDebug, Clone, Insertable, Identifiable, AsChangeset, Queryable, Serialize, Deserialize, Model,\n+)]\n+#[diesel(primary_key(pull_request_id, sha))]\n+pub struct GithubPullRequestCommit {\n+\tpub sha: String,\n+\tpub pull_request_id: GithubPullRequestId,\n+\tpub html_url: String,\n+\tpub author_id: GithubUserId,\n+}\n+\n+impl Identifiable for GithubPullRequestCommit {\n+\ttype Id = (GithubPullRequestId, String);\n+\n+\tfn id(self) -> Self::Id {\n+\t\t(self.pull_request_id, self.sha)\n+\t}\n+}"
        },
        {
            "sha": "17be22e742b558356c1a832a9d34a404947af1b6",
            "filename": "backend/api/src/models/github_pull_requests/mod.rs",
            "status": "added",
            "additions": 87,
            "deletions": 0,
            "changes": 87,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,87 @@\n+mod commit;\n+pub use commit::GithubPullRequestCommit as Commit;\n+\n+mod review;\n+pub use review::GithubPullRequestReview as Review;\n+\n+mod closing_issues;\n+pub use closing_issues::ClosingIssue;\n+\n+mod pull_request;\n+pub use pull_request::GithubPullRequest as Inner;\n+\n+#[derive(Debug, Clone)]\n+pub struct PullRequest {\n+\tpub inner: Inner,\n+\tpub commits: Option<Vec<Commit>>,\n+\tpub reviews: Option<Vec<Review>>,\n+\tpub closing_issues: Option<Vec<ClosingIssue>>,\n+}\n+\n+impl From<domain::GithubPullRequest> for PullRequest {\n+\tfn from(pull_request: domain::GithubPullRequest) -> Self {\n+\t\tSelf {\n+\t\t\tinner: Inner {\n+\t\t\t\tid: pull_request.id,\n+\t\t\t\trepo_id: pull_request.repo_id,\n+\t\t\t\tnumber: pull_request.number,\n+\t\t\t\tcreated_at: pull_request.created_at.naive_utc(),\n+\t\t\t\tauthor_id: pull_request.author.id,\n+\t\t\t\tmerged_at: pull_request.merged_at.map(|date| date.naive_utc()),\n+\t\t\t\tstatus: pull_request.status.into(),\n+\t\t\t\ttitle: pull_request.title,\n+\t\t\t\thtml_url: pull_request.html_url.to_string(),\n+\t\t\t\tclosed_at: pull_request.closed_at.map(|date| date.naive_utc()),\n+\t\t\t\tdraft: pull_request.draft,\n+\t\t\t\tci_checks: None,\n+\t\t\t},\n+\t\t\tcommits: None,\n+\t\t\treviews: None,\n+\t\t\tclosing_issues: None,\n+\t\t}\n+\t}\n+}\n+\n+impl From<domain::GithubFullPullRequest> for PullRequest {\n+\tfn from(from: domain::GithubFullPullRequest) -> Self {\n+\t\tlet mut pull_request = Self::from(from.inner);\n+\t\tpull_request.inner.ci_checks = from.ci_checks.map(Into::into);\n+\t\tpull_request.commits = from.commits.map(|commits| {\n+\t\t\tcommits\n+\t\t\t\t.into_iter()\n+\t\t\t\t.map(|c| Commit {\n+\t\t\t\t\tsha: c.sha,\n+\t\t\t\t\tpull_request_id: pull_request.inner.id,\n+\t\t\t\t\thtml_url: c.html_url.to_string(),\n+\t\t\t\t\tauthor_id: c.author.id,\n+\t\t\t\t})\n+\t\t\t\t.collect()\n+\t\t});\n+\n+\t\tpull_request.reviews = from.reviews.map(|reviews| {\n+\t\t\treviews\n+\t\t\t\t.into_iter()\n+\t\t\t\t.map(|review| Review {\n+\t\t\t\t\tid: review.id().to_string(),\n+\t\t\t\t\tpull_request_id: review.pull_request_id,\n+\t\t\t\t\treviewer_id: review.reviewer.id,\n+\t\t\t\t\toutcome: review.outcome.map(Into::into),\n+\t\t\t\t\tstatus: review.status.into(),\n+\t\t\t\t\tsubmitted_at: review.submitted_at.map(|date| date.naive_utc()),\n+\t\t\t\t})\n+\t\t\t\t.collect()\n+\t\t});\n+\n+\t\tpull_request.closing_issues = from.closing_issue_ids.map(|closing_issue_ids| {\n+\t\t\tclosing_issue_ids\n+\t\t\t\t.into_iter()\n+\t\t\t\t.map(|github_issue_id| ClosingIssue {\n+\t\t\t\t\tgithub_issue_id,\n+\t\t\t\t\tgithub_pull_request_id: pull_request.inner.id,\n+\t\t\t\t})\n+\t\t\t\t.collect()\n+\t\t});\n+\n+\t\tpull_request\n+\t}\n+}"
        },
        {
            "sha": "9e75081b6d814c06651dda0e841ef0242dd1c6d6",
            "filename": "backend/api/src/models/github_pull_requests/pull_request.rs",
            "status": "added",
            "additions": 34,
            "deletions": 0,
            "changes": 34,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fpull_request.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fpull_request.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Fpull_request.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,34 @@\n+use chrono::NaiveDateTime;\n+use diesel::Identifiable;\n+use domain::{GithubPullRequestId, GithubPullRequestNumber, GithubRepoId, GithubUserId};\n+use infrastructure::database::{\n+\tenums::{GithubCiChecks, GithubPullRequestStatus},\n+\tschema::github_pull_requests,\n+};\n+use serde::{Deserialize, Serialize};\n+\n+#[derive(\n+\tDebug, Clone, Insertable, AsChangeset, Identifiable, Queryable, Serialize, Deserialize, Model,\n+)]\n+pub struct GithubPullRequest {\n+\tpub id: GithubPullRequestId,\n+\tpub repo_id: GithubRepoId,\n+\tpub number: GithubPullRequestNumber,\n+\tpub created_at: NaiveDateTime,\n+\tpub author_id: GithubUserId,\n+\tpub merged_at: Option<NaiveDateTime>,\n+\tpub status: GithubPullRequestStatus,\n+\tpub title: String,\n+\tpub html_url: String,\n+\tpub closed_at: Option<NaiveDateTime>,\n+\tpub draft: bool,\n+\tpub ci_checks: Option<GithubCiChecks>,\n+}\n+\n+impl Identifiable for GithubPullRequest {\n+\ttype Id = GithubPullRequestId;\n+\n+\tfn id(self) -> Self::Id {\n+\t\tself.id\n+\t}\n+}"
        },
        {
            "sha": "c5d8ca2aa99f730741498ef8359f7b78e88eddf2",
            "filename": "backend/api/src/models/github_pull_requests/review.rs",
            "status": "added",
            "additions": 28,
            "deletions": 0,
            "changes": 28,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Freview.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Freview.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_pull_requests%2Freview.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,28 @@\n+use chrono::NaiveDateTime;\n+use diesel::Identifiable;\n+use domain::{GithubPullRequestId, GithubUserId};\n+use infrastructure::database::{\n+\tenums::{GithubCodeReviewOutcome, GithubCodeReviewStatus},\n+\tschema::github_pull_request_reviews,\n+};\n+use serde::{Deserialize, Serialize};\n+\n+#[derive(\n+\tDebug, Clone, Insertable, Identifiable, AsChangeset, Queryable, Serialize, Deserialize, Model,\n+)]\n+pub struct GithubPullRequestReview {\n+\tpub pull_request_id: GithubPullRequestId,\n+\tpub reviewer_id: GithubUserId,\n+\tpub status: GithubCodeReviewStatus,\n+\tpub outcome: Option<GithubCodeReviewOutcome>,\n+\tpub submitted_at: Option<NaiveDateTime>,\n+\tpub id: String,\n+}\n+\n+impl Identifiable for GithubPullRequestReview {\n+\ttype Id = String;\n+\n+\tfn id(self) -> Self::Id {\n+\t\tself.id\n+\t}\n+}"
        },
        {
            "sha": "0e79487e5e6f806635edbd90cba277529a53be02",
            "filename": "backend/api/src/models/github_repo_indexes/mod.rs",
            "status": "added",
            "additions": 46,
            "deletions": 0,
            "changes": 46,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_repo_indexes%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_repo_indexes%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_repo_indexes%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,46 @@\n+mod repository;\n+use chrono::NaiveDateTime;\n+use diesel::Identifiable;\n+use domain::GithubRepoId;\n+use infrastructure::database::schema::github_repo_indexes;\n+pub use repository::Repository;\n+use serde::{Deserialize, Serialize};\n+use serde_json::Value;\n+\n+#[derive(\n+\tDebug,\n+\tDefault,\n+\tClone,\n+\tInsertable,\n+\tAsChangeset,\n+\tIdentifiable,\n+\tQueryable,\n+\tSerialize,\n+\tDeserialize,\n+\tModel,\n+)]\n+#[diesel(table_name = github_repo_indexes, primary_key(repo_id))]\n+pub struct GithubRepoIndex {\n+\tpub repo_id: GithubRepoId,\n+\tpub repo_indexer_state: Option<Value>,\n+\tpub issues_indexer_state: Option<Value>,\n+\tpub pull_requests_indexer_state: Option<Value>,\n+\tpub indexed_at: Option<NaiveDateTime>,\n+}\n+\n+impl GithubRepoIndex {\n+\tpub fn new(repo_id: GithubRepoId) -> Self {\n+\t\tSelf {\n+\t\t\trepo_id,\n+\t\t\t..Default::default()\n+\t\t}\n+\t}\n+}\n+\n+impl Identifiable for GithubRepoIndex {\n+\ttype Id = GithubRepoId;\n+\n+\tfn id(self) -> Self::Id {\n+\t\tself.repo_id\n+\t}\n+}"
        },
        {
            "sha": "e1676845bfc7812b003895be438f2d345cf452a4",
            "filename": "backend/api/src/models/github_repo_indexes/repository.rs",
            "status": "added",
            "additions": 151,
            "deletions": 0,
            "changes": 151,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_repo_indexes%2Frepository.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_repo_indexes%2Frepository.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_repo_indexes%2Frepository.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,151 @@\n+use diesel::{ExpressionMethods, QueryDsl, RunQueryDsl};\n+use domain::GithubRepoId;\n+use infrastructure::{\n+\tcontextualized_error::IntoContextualizedError,\n+\tdatabase,\n+\tdatabase::{schema::github_repo_indexes::dsl, Result},\n+};\n+\n+use super::GithubRepoIndex;\n+use crate::diesel::OptionalExtension;\n+\n+pub trait Repository: database::Repository<GithubRepoIndex> {\n+\tfn select_repo_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t) -> Result<Option<serde_json::Value>>;\n+\tfn update_repo_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()>;\n+\n+\tfn select_issues_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t) -> Result<Option<serde_json::Value>>;\n+\tfn update_issues_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()>;\n+\n+\tfn select_pull_requests_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t) -> Result<Option<serde_json::Value>>;\n+\tfn update_pull_requests_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()>;\n+\n+\tfn start_indexing(&self, repo_id: GithubRepoId) -> Result<()>;\n+}\n+\n+impl Repository for database::Client {\n+\tfn select_repo_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t) -> Result<Option<serde_json::Value>> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tlet state = dsl::github_repo_indexes\n+\t\t\t.select(dsl::repo_indexer_state)\n+\t\t\t.filter(dsl::repo_id.eq(repo_id))\n+\t\t\t.first(&mut *connection)\n+\t\t\t.optional()\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"select repo_indexer_state from github_repo_indexes where id={repo_id}\"\n+\t\t\t))?\n+\t\t\t.flatten();\n+\t\tOk(state)\n+\t}\n+\n+\tfn update_repo_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tdiesel::update(dsl::github_repo_indexes)\n+\t\t\t.set(dsl::repo_indexer_state.eq(state))\n+\t\t\t.filter(dsl::repo_id.eq(repo_id))\n+\t\t\t.execute(&mut *connection)\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"update github_repo_indexes set github_repo_indexes where id={repo_id}\"\n+\t\t\t))?;\n+\t\tOk(())\n+\t}\n+\n+\tfn select_issues_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t) -> Result<Option<serde_json::Value>> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tlet state = dsl::github_repo_indexes\n+\t\t\t.select(dsl::issues_indexer_state)\n+\t\t\t.filter(dsl::repo_id.eq(repo_id))\n+\t\t\t.first(&mut *connection)\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"select issues_indexer_state from github_repo_indexes where id={repo_id}\"\n+\t\t\t))?;\n+\t\tOk(state)\n+\t}\n+\n+\tfn update_issues_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tdiesel::update(dsl::github_repo_indexes)\n+\t\t\t.set(dsl::issues_indexer_state.eq(state))\n+\t\t\t.filter(dsl::repo_id.eq(repo_id))\n+\t\t\t.execute(&mut *connection)\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"update github_repo_indexes set issues_indexer_state where id={repo_id}\"\n+\t\t\t))?;\n+\t\tOk(())\n+\t}\n+\n+\tfn select_pull_requests_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t) -> Result<Option<serde_json::Value>> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tlet state = dsl::github_repo_indexes\n+\t\t\t.select(dsl::pull_requests_indexer_state)\n+\t\t\t.filter(dsl::repo_id.eq(repo_id))\n+\t\t\t.first(&mut *connection)\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"select pull_requests_indexer_state from github_repo_indexes where id={repo_id}\"\n+\t\t\t))?;\n+\t\tOk(state)\n+\t}\n+\n+\tfn update_pull_requests_indexer_state(\n+\t\t&self,\n+\t\trepo_id: &GithubRepoId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tdiesel::update(dsl::github_repo_indexes)\n+\t\t\t.set(dsl::pull_requests_indexer_state.eq(state))\n+\t\t\t.filter(dsl::repo_id.eq(repo_id))\n+\t\t\t.execute(&mut *connection)\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"update github_repo_indexes set pull_requests_indexer_state where id={repo_id}\"\n+\t\t\t))?;\n+\t\tOk(())\n+\t}\n+\n+\tfn start_indexing(&self, repo_id: GithubRepoId) -> Result<()> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tdiesel::insert_into(dsl::github_repo_indexes)\n+\t\t\t.values(GithubRepoIndex::new(repo_id))\n+\t\t\t.on_conflict_do_nothing()\n+\t\t\t.execute(&mut *connection)\n+\t\t\t.err_with_context(format!(\"insert github_repo_indexes with id={repo_id}\"))?;\n+\t\tOk(())\n+\t}\n+}"
        },
        {
            "sha": "38d10c7131bfc44d1745da99b35d446eecf06eb9",
            "filename": "backend/api/src/models/github_user_indexes/mod.rs",
            "status": "added",
            "additions": 58,
            "deletions": 0,
            "changes": 58,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_user_indexes%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_user_indexes%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_user_indexes%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,58 @@\n+mod repository;\n+use chrono::NaiveDateTime;\n+use diesel::{pg::Pg, Identifiable, Queryable};\n+use domain::GithubUserId;\n+use infrastructure::database::schema::github_user_indexes;\n+pub use repository::Repository;\n+use serde::{Deserialize, Serialize};\n+use serde_json::Value;\n+\n+#[derive(\n+\tDebug,\n+\tDefault,\n+\tClone,\n+\tInsertable,\n+\tIdentifiable,\n+\tQueryableByName,\n+\tSerialize,\n+\tDeserialize,\n+\tImmutableModel,\n+)]\n+#[diesel(table_name = github_user_indexes, primary_key(user_id))]\n+pub struct GithubUserIndex {\n+\tpub user_id: GithubUserId,\n+\tpub indexed_at: Option<NaiveDateTime>,\n+}\n+\n+impl<ST> Queryable<ST, Pg> for GithubUserIndex\n+where\n+\t(\n+\t\tGithubUserId,\n+\t\tOption<Value>,\n+\t\tOption<Value>,\n+\t\tOption<NaiveDateTime>,\n+\t): Queryable<ST, Pg>,\n+{\n+\ttype Row = <(\n+\t\tGithubUserId,\n+\t\tOption<Value>,\n+\t\tOption<Value>,\n+\t\tOption<NaiveDateTime>,\n+\t) as Queryable<ST, Pg>>::Row;\n+\n+\tfn build(row: Self::Row) -> diesel::deserialize::Result<Self> {\n+\t\tlet (user_id, _, _, indexed_at) = Queryable::build(row)?;\n+\t\tOk(Self {\n+\t\t\tuser_id,\n+\t\t\tindexed_at,\n+\t\t})\n+\t}\n+}\n+\n+impl Identifiable for GithubUserIndex {\n+\ttype Id = GithubUserId;\n+\n+\tfn id(self) -> Self::Id {\n+\t\tself.user_id\n+\t}\n+}"
        },
        {
            "sha": "bc9eed7e9500c8ff62c887c9f9ac7bc13410e344",
            "filename": "backend/api/src/models/github_user_indexes/repository.rs",
            "status": "added",
            "additions": 56,
            "deletions": 0,
            "changes": 56,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_user_indexes%2Frepository.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_user_indexes%2Frepository.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fgithub_user_indexes%2Frepository.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,56 @@\n+use diesel::{ExpressionMethods, OptionalExtension, QueryDsl, RunQueryDsl};\n+use domain::GithubUserId;\n+use infrastructure::{\n+\tcontextualized_error::IntoContextualizedError,\n+\tdatabase,\n+\tdatabase::{schema::github_user_indexes::dsl, Result},\n+};\n+\n+use super::GithubUserIndex;\n+\n+pub trait Repository: database::ImmutableRepository<GithubUserIndex> {\n+\tfn select_user_indexer_state(\n+\t\t&self,\n+\t\tuser_id: &GithubUserId,\n+\t) -> Result<Option<serde_json::Value>>;\n+\tfn update_user_indexer_state(\n+\t\t&self,\n+\t\tuser_id: &GithubUserId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()>;\n+}\n+\n+impl Repository for database::Client {\n+\tfn select_user_indexer_state(\n+\t\t&self,\n+\t\tuser_id: &GithubUserId,\n+\t) -> Result<Option<serde_json::Value>> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tlet state = dsl::github_user_indexes\n+\t\t\t.select(dsl::user_indexer_state)\n+\t\t\t.filter(dsl::user_id.eq(user_id))\n+\t\t\t.first(&mut *connection)\n+\t\t\t.optional()\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"select user_indexer_state from github_user_indexes where user_id={user_id}\"\n+\t\t\t))?\n+\t\t\t.flatten();\n+\t\tOk(state)\n+\t}\n+\n+\tfn update_user_indexer_state(\n+\t\t&self,\n+\t\tuser_id: &GithubUserId,\n+\t\tstate: serde_json::Value,\n+\t) -> Result<()> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tdiesel::update(dsl::github_user_indexes)\n+\t\t\t.set(dsl::user_indexer_state.eq(state))\n+\t\t\t.filter(dsl::user_id.eq(user_id))\n+\t\t\t.execute(&mut *connection)\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"update github_user_indexes set user_indexer_state where user_id={user_id}\"\n+\t\t\t))?;\n+\t\tOk(())\n+\t}\n+}"
        },
        {
            "sha": "3d56cc49e4e3d23795f1a9861cfe1a02c7b40a53",
            "filename": "backend/api/src/models/mod.rs",
            "status": "modified",
            "additions": 54,
            "deletions": 23,
            "changes": 77,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -1,37 +1,68 @@\n-mod crypto_usd_quotes;\n-pub use crypto_usd_quotes::CryptoUsdQuote;\n-\n+mod applications;\n+mod budgets;\n mod contact_informations;\n-pub use contact_informations::{ContactInformation, Repository as ContactInformationsRepository};\n-\n+mod crypto_usd_quotes;\n mod events;\n-pub use events::{Event, Repository as EventRepository};\n-\n+mod github_issues;\n+pub mod github_pull_request_indexes;\n+pub mod github_pull_requests;\n+mod github_repo_indexes;\n+mod github_user_indexes;\n mod ignored_contributions;\n-pub use ignored_contributions::IgnoredContribution;\n-\n+mod onboarding;\n+mod payment_requests;\n+mod payments;\n+mod payout_info;\n mod pending_project_leader_invitations;\n-pub use pending_project_leader_invitations::{\n-\tId as PendingProjectLeaderInvitationId, PendingProjectLeaderInvitation,\n-};\n-\n mod project_details;\n-pub use project_details::ProjectDetails;\n-\n+mod project_github_repos;\n+mod project_leads;\n+mod projects;\n+mod projects_budgets;\n+mod projects_contributors;\n+mod projects_pending_contributors;\n+mod projects_rewarded_users;\n mod projects_sponsors;\n-pub use projects_sponsors::ProjectsSponsor;\n-\n mod sponsors;\n-pub use sponsors::Sponsor;\n+mod user_profile_info;\n+mod work_items;\n \n-mod onboarding;\n+pub use applications::Application;\n+pub use budgets::Budget;\n+pub use contact_informations::{ContactInformation, Repository as ContactInformationsRepository};\n+pub use crypto_usd_quotes::CryptoUsdQuote;\n+pub use events::{Event, Repository as EventRepository};\n+pub use github_issues::GithubIssue;\n+pub use github_pull_request_indexes::{\n+\tGithubPullRequestIndex, Repository as GithubPullRequestIndexRepository,\n+};\n+pub use github_pull_requests::PullRequest as GithubPullRequest;\n+pub use github_repo_indexes::{GithubRepoIndex, Repository as GithubRepoIndexRepository};\n+pub use github_user_indexes::{GithubUserIndex, Repository as GithubUserIndexRepository};\n+pub use ignored_contributions::IgnoredContribution;\n pub use onboarding::Onboarding;\n-\n-mod payout_info;\n+pub use payment_requests::PaymentRequest;\n+pub use payments::Payment;\n pub use payout_info::{\n \tBankAccount, CompanyIdentity, Identity, Location, PersonIdentity,\n \tRepository as PayoutInfoRepository, UserPayoutInfo, Wallet,\n };\n-\n-mod user_profile_info;\n+pub use pending_project_leader_invitations::{\n+\tId as PendingProjectLeaderInvitationId, PendingProjectLeaderInvitation,\n+};\n+pub use project_details::ProjectDetails;\n+pub use project_github_repos::{ProjectGithubRepo, Repository as ProjectGithubRepoRepository};\n+pub use project_leads::ProjectLead;\n+pub use projects::Project;\n+pub use projects_budgets::ProjectsBudget;\n+pub use projects_contributors::{ProjectsContributor, Repository as ProjectsContributorRepository};\n+pub use projects_pending_contributors::{\n+\tProjectsPendingContributor, Repository as ProjectsPendingContributorRepository,\n+};\n+pub use projects_rewarded_users::{\n+\tProjectsRewardedUser, Repository as ProjectsRewardedUserRepository,\n+};\n+pub use projects_sponsors::ProjectsSponsor;\n+pub use sponsors::Sponsor;\n pub use user_profile_info::{Repository as UserProfileInfoRepository, UserProfileInfo};\n+pub use work_items::{Repository as WorkItemRepository, WorkItem};"
        },
        {
            "sha": "16bf63e12721cd51cce3781720de20fb5e4a54f1",
            "filename": "backend/api/src/models/payment_requests.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fpayment_requests.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fpayment_requests.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fpayment_requests.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/payment_requests.rs"
        },
        {
            "sha": "5a2bbc3145343b5626c4a348d0fb2d8bf4b8096c",
            "filename": "backend/api/src/models/payments.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fpayments.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fpayments.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fpayments.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/payments.rs"
        },
        {
            "sha": "f3562b56c561b415c78113839b709d58d41edc12",
            "filename": "backend/api/src/models/project_github_repos/mod.rs",
            "status": "added",
            "additions": 20,
            "deletions": 0,
            "changes": 20,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fproject_github_repos%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fproject_github_repos%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fproject_github_repos%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,20 @@\n+mod repository;\n+use diesel::Identifiable;\n+use domain::{GithubRepoId, ProjectId};\n+use infrastructure::database::schema::project_github_repos;\n+pub use repository::Repository;\n+\n+#[derive(Debug, Insertable, Identifiable, Queryable, ImmutableModel)]\n+#[diesel(primary_key(project_id, github_repo_id))]\n+pub struct ProjectGithubRepo {\n+\tpub project_id: ProjectId,\n+\tpub github_repo_id: GithubRepoId,\n+}\n+\n+impl Identifiable for ProjectGithubRepo {\n+\ttype Id = (ProjectId, GithubRepoId);\n+\n+\tfn id(self) -> Self::Id {\n+\t\t(self.project_id, self.github_repo_id)\n+\t}\n+}"
        },
        {
            "sha": "201b443f12240bf4b353fe0be71bc56dcc3b4d78",
            "filename": "backend/api/src/models/project_github_repos/repository.rs",
            "status": "added",
            "additions": 27,
            "deletions": 0,
            "changes": 27,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fproject_github_repos%2Frepository.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fproject_github_repos%2Frepository.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fproject_github_repos%2Frepository.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,27 @@\n+use diesel::{ExpressionMethods, QueryDsl, RunQueryDsl};\n+use domain::{GithubRepoId, ProjectId};\n+use infrastructure::{\n+\tcontextualized_error::IntoContextualizedError,\n+\tdatabase,\n+\tdatabase::{schema::project_github_repos::dsl, Result},\n+};\n+\n+use super::ProjectGithubRepo;\n+\n+pub trait Repository: database::ImmutableRepository<ProjectGithubRepo> {\n+\tfn find_projects_of_repo(&self, github_repo_id: &GithubRepoId) -> Result<Vec<ProjectId>>;\n+}\n+\n+impl Repository for database::Client {\n+\tfn find_projects_of_repo(&self, github_repo_id: &GithubRepoId) -> Result<Vec<ProjectId>> {\n+\t\tlet mut connection = self.connection()?;\n+\t\tlet projects = dsl::project_github_repos\n+\t\t\t.select(dsl::project_id)\n+\t\t\t.filter(dsl::github_repo_id.eq(github_repo_id))\n+\t\t\t.load(&mut *connection)\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"select project_id from project_github_repos where github_repo_id={github_repo_id}\"\n+\t\t\t))?;\n+\t\tOk(projects)\n+\t}\n+}"
        },
        {
            "sha": "558198d33e6074e47a81c2bf149f800b2e92b10f",
            "filename": "backend/api/src/models/project_leads.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fproject_leads.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fproject_leads.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fproject_leads.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/project_leads.rs"
        },
        {
            "sha": "2794863c53d1be0d2a890f70719be849c2d6d87f",
            "filename": "backend/api/src/models/projects.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/projects.rs"
        },
        {
            "sha": "65e3816a446a73b2cc3c73028d855c28cc1aa0db",
            "filename": "backend/api/src/models/projects_budgets.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_budgets.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_budgets.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_budgets.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/projects_budgets.rs"
        },
        {
            "sha": "ef0b7398d76d1fa0fc4301bb5116036eee0c64c2",
            "filename": "backend/api/src/models/projects_contributors/mod.rs",
            "status": "added",
            "additions": 20,
            "deletions": 0,
            "changes": 20,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_contributors%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_contributors%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_contributors%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,20 @@\n+mod repository;\n+use diesel::Identifiable;\n+use domain::{GithubUserId, ProjectId};\n+use infrastructure::database::schema::projects_contributors;\n+pub use repository::Repository;\n+\n+#[derive(Debug, Insertable, Identifiable, Queryable, ImmutableModel)]\n+#[diesel(primary_key(project_id, github_user_id))]\n+pub struct ProjectsContributor {\n+\tpub project_id: ProjectId,\n+\tpub github_user_id: GithubUserId,\n+}\n+\n+impl Identifiable for ProjectsContributor {\n+\ttype Id = (ProjectId, GithubUserId);\n+\n+\tfn id(self) -> Self::Id {\n+\t\t(self.project_id, self.github_user_id)\n+\t}\n+}"
        },
        {
            "sha": "c8df31b01d97eea8df67b30c060d56bedc2a8fa7",
            "filename": "backend/api/src/models/projects_contributors/repository.rs",
            "status": "added",
            "additions": 64,
            "deletions": 0,
            "changes": 64,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_contributors%2Frepository.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_contributors%2Frepository.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_contributors%2Frepository.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,64 @@\n+use diesel::{Connection, ExpressionMethods, QueryDsl, RunQueryDsl};\n+use domain::{GithubRepoId, GithubUserId, ProjectId};\n+use infrastructure::{\n+\tcontextualized_error::IntoContextualizedError,\n+\tdatabase::{\n+\t\tself,\n+\t\tenums::ContributionStatus,\n+\t\tschema::{contributions, project_github_repos, projects_contributors::dsl},\n+\t\tResult,\n+\t},\n+};\n+\n+use super::ProjectsContributor;\n+\n+pub trait Repository: database::ImmutableRepository<ProjectsContributor> {\n+\tfn refresh_project_contributor_list(&self, project_id: &ProjectId)\n+\t-> Result<Vec<GithubUserId>>;\n+}\n+\n+impl Repository for database::Client {\n+\tfn refresh_project_contributor_list(\n+\t\t&self,\n+\t\tproject_id: &ProjectId,\n+\t) -> Result<Vec<GithubUserId>> {\n+\t\tlet mut connection = self.connection()?;\n+\n+\t\tlet mut contributors: Vec<GithubUserId> = vec![];\n+\t\tconnection\n+\t\t\t.transaction::<_, diesel::result::Error, _>(|tx| {\n+\t\t\t\tdiesel::delete(dsl::projects_contributors)\n+\t\t\t\t\t.filter(dsl::project_id.eq(project_id))\n+\t\t\t\t\t.execute(&mut *tx)?;\n+\n+\t\t\t\tlet repos: Vec<GithubRepoId> = project_github_repos::dsl::project_github_repos\n+\t\t\t\t\t.select(project_github_repos::dsl::github_repo_id)\n+\t\t\t\t\t.filter(project_github_repos::dsl::project_id.eq(project_id))\n+\t\t\t\t\t.load(&mut *tx)?;\n+\n+\t\t\t\tcontributors = contributions::dsl::contributions\n+\t\t\t\t\t.select(contributions::dsl::user_id)\n+\t\t\t\t\t.distinct()\n+\t\t\t\t\t.filter(contributions::dsl::repo_id.eq_any(repos))\n+\t\t\t\t\t.filter(contributions::dsl::status.eq(ContributionStatus::Complete))\n+\t\t\t\t\t.load(&mut *tx)?;\n+\n+\t\t\t\tcontributors.iter().try_for_each(|user_id| {\n+\t\t\t\t\tdiesel::insert_into(dsl::projects_contributors)\n+\t\t\t\t\t\t.values((\n+\t\t\t\t\t\t\tdsl::project_id.eq(project_id),\n+\t\t\t\t\t\t\tdsl::github_user_id.eq(user_id),\n+\t\t\t\t\t\t))\n+\t\t\t\t\t\t.on_conflict_do_nothing()\n+\t\t\t\t\t\t.execute(&mut *tx)?;\n+\t\t\t\t\tOk::<(), diesel::result::Error>(())\n+\t\t\t\t})?;\n+\n+\t\t\t\tOk(())\n+\t\t\t})\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"refreshing contributors of project with id={project_id}\"\n+\t\t\t))?;\n+\t\tOk(contributors)\n+\t}\n+}"
        },
        {
            "sha": "38416f7a50221b054653333c1ebe2a24bce0a777",
            "filename": "backend/api/src/models/projects_pending_contributors/mod.rs",
            "status": "added",
            "additions": 20,
            "deletions": 0,
            "changes": 20,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_pending_contributors%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_pending_contributors%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_pending_contributors%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,20 @@\n+mod repository;\n+use diesel::Identifiable;\n+use domain::{GithubUserId, ProjectId};\n+use infrastructure::database::schema::projects_pending_contributors;\n+pub use repository::Repository;\n+\n+#[derive(Debug, Insertable, Identifiable, Queryable, ImmutableModel)]\n+#[diesel(primary_key(project_id, github_user_id))]\n+pub struct ProjectsPendingContributor {\n+\tpub project_id: ProjectId,\n+\tpub github_user_id: GithubUserId,\n+}\n+\n+impl Identifiable for ProjectsPendingContributor {\n+\ttype Id = (ProjectId, GithubUserId);\n+\n+\tfn id(self) -> Self::Id {\n+\t\t(self.project_id, self.github_user_id)\n+\t}\n+}"
        },
        {
            "sha": "d702c1afc61a03b16b387b4f63bbb74a84b92855",
            "filename": "backend/api/src/models/projects_pending_contributors/repository.rs",
            "status": "added",
            "additions": 64,
            "deletions": 0,
            "changes": 64,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_pending_contributors%2Frepository.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_pending_contributors%2Frepository.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_pending_contributors%2Frepository.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -0,0 +1,64 @@\n+use diesel::{Connection, ExpressionMethods, QueryDsl, RunQueryDsl};\n+use domain::{GithubRepoId, GithubUserId, ProjectId};\n+use infrastructure::{\n+\tcontextualized_error::IntoContextualizedError,\n+\tdatabase,\n+\tdatabase::{\n+\t\tschema::{contributions, project_github_repos, projects_pending_contributors::dsl},\n+\t\tResult,\n+\t},\n+};\n+\n+use super::ProjectsPendingContributor;\n+\n+pub trait Repository: database::ImmutableRepository<ProjectsPendingContributor> {\n+\tfn refresh_project_pending_contributor_list(\n+\t\t&self,\n+\t\tproject_id: &ProjectId,\n+\t) -> Result<Vec<GithubUserId>>;\n+}\n+\n+impl Repository for database::Client {\n+\tfn refresh_project_pending_contributor_list(\n+\t\t&self,\n+\t\tproject_id: &ProjectId,\n+\t) -> Result<Vec<GithubUserId>> {\n+\t\tlet mut connection = self.connection()?;\n+\n+\t\tlet mut contributors: Vec<GithubUserId> = vec![];\n+\t\tconnection\n+\t\t\t.transaction::<_, diesel::result::Error, _>(|tx| {\n+\t\t\t\tdiesel::delete(dsl::projects_pending_contributors)\n+\t\t\t\t\t.filter(dsl::project_id.eq(project_id))\n+\t\t\t\t\t.execute(&mut *tx)?;\n+\n+\t\t\t\tlet repos: Vec<GithubRepoId> = project_github_repos::dsl::project_github_repos\n+\t\t\t\t\t.select(project_github_repos::dsl::github_repo_id)\n+\t\t\t\t\t.filter(project_github_repos::dsl::project_id.eq(project_id))\n+\t\t\t\t\t.load(&mut *tx)?;\n+\n+\t\t\t\tcontributors = contributions::dsl::contributions\n+\t\t\t\t\t.select(contributions::dsl::user_id)\n+\t\t\t\t\t.distinct()\n+\t\t\t\t\t.filter(contributions::dsl::repo_id.eq_any(repos))\n+\t\t\t\t\t.load(&mut *tx)?;\n+\n+\t\t\t\tcontributors.iter().try_for_each(|user_id| {\n+\t\t\t\t\tdiesel::insert_into(dsl::projects_pending_contributors)\n+\t\t\t\t\t\t.values((\n+\t\t\t\t\t\t\tdsl::project_id.eq(project_id),\n+\t\t\t\t\t\t\tdsl::github_user_id.eq(user_id),\n+\t\t\t\t\t\t))\n+\t\t\t\t\t\t.on_conflict_do_nothing()\n+\t\t\t\t\t\t.execute(&mut *tx)?;\n+\t\t\t\t\tOk::<(), diesel::result::Error>(())\n+\t\t\t\t})?;\n+\n+\t\t\t\tOk(())\n+\t\t\t})\n+\t\t\t.err_with_context(format!(\n+\t\t\t\t\"refreshing pending contributors of project with id={project_id}\"\n+\t\t\t))?;\n+\t\tOk(contributors)\n+\t}\n+}"
        },
        {
            "sha": "dc9ff77953d89b940ff708e859169a53275b73f2",
            "filename": "backend/api/src/models/projects_rewarded_users/mod.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_rewarded_users%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_rewarded_users%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_rewarded_users%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/projects_rewarded_users/mod.rs"
        },
        {
            "sha": "7330dc7f939d059bbbafdafc23bdf0b1e67c0531",
            "filename": "backend/api/src/models/projects_rewarded_users/repository.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_rewarded_users%2Frepository.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_rewarded_users%2Frepository.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fprojects_rewarded_users%2Frepository.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/projects_rewarded_users/repository.rs"
        },
        {
            "sha": "1cc944ca2dbca0bb4c74465de280fefa5f6f6867",
            "filename": "backend/api/src/models/work_items/mod.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fwork_items%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fwork_items%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fwork_items%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/work_items/mod.rs"
        },
        {
            "sha": "559d2464aeb1425fc7588270347711dedd130379",
            "filename": "backend/api/src/models/work_items/repository.rs",
            "status": "renamed",
            "additions": 0,
            "deletions": 0,
            "changes": 0,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fwork_items%2Frepository.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fapi%2Fsrc%2Fmodels%2Fwork_items%2Frepository.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fapi%2Fsrc%2Fmodels%2Fwork_items%2Frepository.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "previous_filename": "backend/event-listeners/src/models/work_items/repository.rs"
        },
        {
            "sha": "ac8f7b389d691a48d45b8eaad79cb9b8976da5ad",
            "filename": "backend/event-listeners/src/models/mod.rs",
            "status": "modified",
            "additions": 0,
            "deletions": 20,
            "changes": 20,
            "blob_url": "https://github.com/onlydustxyz/marketplace-frontend/blob/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fevent-listeners%2Fsrc%2Fmodels%2Fmod.rs",
            "raw_url": "https://github.com/onlydustxyz/marketplace-frontend/raw/37d08c97a6ac0002ecc6555d1a3328781d93d9f3/backend%2Fevent-listeners%2Fsrc%2Fmodels%2Fmod.rs",
            "contents_url": "https://api.github.com/repos/onlydustxyz/marketplace-frontend/contents/backend%2Fevent-listeners%2Fsrc%2Fmodels%2Fmod.rs?ref=37d08c97a6ac0002ecc6555d1a3328781d93d9f3",
            "patch": "@@ -1,5 +1,3 @@\n-mod applications;\n-mod budgets;\n mod contributions;\n mod crypto_usd_quotes;\n mod github_issues;\n@@ -9,20 +7,11 @@ mod github_repo_indexes;\n mod github_repos;\n mod github_user_indexes;\n mod github_users;\n-mod payment_requests;\n-mod payments;\n mod project_github_repos;\n-mod project_leads;\n-mod projects;\n-mod projects_budgets;\n mod projects_contributors;\n mod projects_pending_contributors;\n-mod projects_rewarded_users;\n mod technologies;\n-mod work_items;\n \n-pub use applications::Application;\n-pub use budgets::Budget;\n pub use contributions::{Contribution, Repository as ContributionsRepository};\n pub use crypto_usd_quotes::CryptoUsdQuote;\n use diesel::PgConnection;\n@@ -38,21 +27,12 @@ pub use github_repos::GithubRepo;\n pub use github_user_indexes::{GithubUserIndex, Repository as GithubUserIndexRepository};\n pub use github_users::GithubUser;\n use infrastructure::database::{self, ImmutableModel, ImmutableRepository};\n-pub use payment_requests::PaymentRequest;\n-pub use payments::Payment;\n pub use project_github_repos::{ProjectGithubRepo, Repository as ProjectGithubRepoRepository};\n-pub use project_leads::ProjectLead;\n-pub use projects::Project;\n-pub use projects_budgets::ProjectsBudget;\n pub use projects_contributors::{ProjectsContributor, Repository as ProjectsContributorRepository};\n pub use projects_pending_contributors::{\n \tProjectsPendingContributor, Repository as ProjectsPendingContributorRepository,\n };\n-pub use projects_rewarded_users::{\n-\tProjectsRewardedUser, Repository as ProjectsRewardedUserRepository,\n-};\n pub use technologies::Technology;\n-pub use work_items::{Repository as WorkItemRepository, WorkItem};\n \n pub trait IdentifiableRepository<M, Id>: Send + Sync {\n \tfn exists(&self, id: Id) -> database::Result<bool>;"
        }
    ]
}