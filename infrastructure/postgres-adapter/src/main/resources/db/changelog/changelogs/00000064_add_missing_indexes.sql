CREATE INDEX IF NOT EXISTS contributions_code_review_id_as_text_index ON indexer_exp.contributions USING btree (code_review_id);
CREATE INDEX IF NOT EXISTS contributions_completed_at_created_at_desc_idx ON indexer_exp.contributions USING btree (COALESCE(completed_at, created_at) DESC);
CREATE INDEX IF NOT EXISTS contributions_completed_at_created_at_idx ON indexer_exp.contributions USING btree (COALESCE(completed_at, created_at));
CREATE INDEX IF NOT EXISTS contributions_completed_at_index ON indexer_exp.contributions USING btree (completed_at);
CREATE INDEX IF NOT EXISTS contributions_contributor_id_index ON indexer_exp.contributions USING btree (contributor_id);
CREATE INDEX IF NOT EXISTS contributions_created_at_index ON indexer_exp.contributions USING btree (created_at);
CREATE INDEX IF NOT EXISTS contributions_github_author_id_index ON indexer_exp.contributions USING btree (github_author_id);
CREATE INDEX IF NOT EXISTS contributions_issue_id_as_text_index ON indexer_exp.contributions USING btree (((issue_id)::text));
CREATE INDEX IF NOT EXISTS contributions_pull_request_id_as_text_index ON indexer_exp.contributions USING btree (((pull_request_id)::text));
CREATE INDEX IF NOT EXISTS contributions_pull_request_id_index ON indexer_exp.contributions USING btree (pull_request_id);
CREATE INDEX IF NOT EXISTS contributions_repo_id_index ON indexer_exp.contributions USING btree (repo_id);
CREATE INDEX IF NOT EXISTS contributions_status_as_text_index ON indexer_exp.contributions USING btree (status);
CREATE INDEX IF NOT EXISTS contributions_type_as_text_index ON indexer_exp.contributions USING btree (type);
CREATE INDEX IF NOT EXISTS indexer_exp_contributions_contributor_id_created_at_idx ON indexer_exp.contributions USING btree (contributor_id, created_at);
CREATE UNIQUE INDEX IF NOT EXISTS github_accounts_login_uidx ON indexer_exp.github_accounts USING btree (login);
CREATE INDEX IF NOT EXISTS github_code_reviews_pull_request_id_index ON indexer_exp.github_code_reviews USING btree (pull_request_id);
CREATE UNIQUE INDEX IF NOT EXISTS github_issues_id_as_text_index ON indexer_exp.github_issues USING btree (((id)::text));
CREATE INDEX IF NOT EXISTS github_issues_repo_id_index ON indexer_exp.github_issues USING btree (repo_id);
CREATE INDEX IF NOT EXISTS github_issues_status_index ON indexer_exp.github_issues USING btree (status);
CREATE INDEX IF NOT EXISTS github_labels_name_ginindex ON indexer_exp.github_labels USING gin (lower(name) public.gin_trgm_ops);
CREATE UNIQUE INDEX IF NOT EXISTS github_pull_requests_id_as_text_index ON indexer_exp.github_pull_requests USING btree (((id)::text));
CREATE UNIQUE INDEX IF NOT EXISTS github_pull_requests_closing_issues_issue_id_idx ON indexer_exp.github_pull_requests_closing_issues USING btree (issue_id, pull_request_id);
CREATE UNIQUE INDEX IF NOT EXISTS github_repo_languages_repo_id_line_count_language_uindex ON indexer_exp.github_repo_languages USING btree (repo_id, line_count DESC, language);
CREATE INDEX IF NOT EXISTS github_repos_id_visibility_idx ON indexer_exp.github_repos USING btree (id, visibility);
CREATE INDEX IF NOT EXISTS grouped_contributions_coalesce_idx ON indexer_exp.grouped_contributions USING btree (COALESCE((issue_id)::text, (pull_request_id)::text, code_review_id));
